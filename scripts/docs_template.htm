<!DOCTYPE html>

<!-- Generated by scripts/compile-docs.js -->

<html>
    <head>
        <title>Documentation | openworldcrafter</title>

        <meta charset="utf-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>

        <link rel="stylesheet" id="mainStylesheet" />
        <link rel="stylesheet" id="emojiStylesheet" href="../styles/emoji.css" />
    </head>

    <body><div class="docs-body-wrapper">
        <script>
            // PROTECTED BY CONTENT SECURITY POLICY HASH WHICH MUST BE UPDATED IF THIS SCRIPT IS MODIFIED
            var theme = localStorage["openworldcrafter.preferences.theme"] || "theme_light"
            document.getElementById("mainStylesheet").href=`../styles/${ theme }.css`
        </script>
        <noscript>
            <link href="../styles/theme_light.css" rel="stylesheet" />
        </noscript>

        <img src="logos/header.svg" class="docs-logo"/>
        <a name="top"></a>

        <div class="docs-wrapper">
            <div class="docs-index"><div class="docs-index-inside">
                <h1>Index</h1>
                $index
            </div></div>

            <hr class="docs-index-separator" />

            <div id="docs_container" class="docs markdown">
                $docs
            </div>
        </div>


        <script type="text/javascript">
            // PROTECTED BY CONTENT SECURITY POLICY HASH WHICH MUST BE UPDATED IF THIS SCRIPT IS MODIFIED
            var docs_container = document.getElementById("docs_container")

            var images = docs_container.getElementsByTagName("img")
            for(var image of images) {
                var img = image.getAttribute("src")

                // use screenshots from the right theme. The markdown files all use the light theme by default.
                // image.src = `screenshots/${ theme }/${ img }`
                image.src = img.replace(/^screenshots\/[^\/]+\/(.*)$/, `screenshots/${ theme }/$1`)
            }

            // sometimes the background shows up as white on the android in app
            // browser. this is a very annoying workaround that forces it to
            // update
            document.body.style.backgroundColor = "white"
            setTimeout(() => document.body.style.removeProperty("background-color"), 10)
        </script>
    </div></body>
</html>
